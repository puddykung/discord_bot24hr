import discord
from discord.ext import commands
from discord import app_commands, Interaction, ButtonStyle
from discord.ui import View, Button, Modal, TextInput
from datetime import datetime
import requests
import re
import os
import pytz  # ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏ã‡∏ô‡πÄ‡∏ß‡∏•‡∏≤

WEBHOOK_URL = "https://canary.discord.com/api/webhooks/1355631108825547053/IcN1liw0m36ly7OjNTdVeMomhTshH1GJ5r2iBdMNQIt8zzBnzDSO45xDF0oGqmJ10xi1"
GUILD_ID = 1355631041339064320  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô ID ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå

intents = discord.Intents.default()
bot = commands.Bot(command_prefix="/", intents=intents)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡πÉ‡∏ä‡πâ‡πÇ‡∏ã‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢)
def get_current_time():
    tz = pytz.timezone("Asia/Bangkok")  # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏ã‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ó‡∏¢
    return datetime.now(tz).strftime("%Y-%m-%d %H:%M:%S")

class ReviewModal(Modal, title="üìù ‡πÄ‡∏ö‡∏¥‡∏Å‡∏Ç‡∏≠‡∏á‡∏à‡∏≤‡∏Å"):
    review = TextInput(
        label="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏ö‡∏¥‡∏Å ‡∏û‡∏£‡πâ‡∏≠‡∏° ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô",
        placeholder="‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á\n‡πÄ‡∏Å‡∏£‡∏≤‡∏∞ 10\nAED 30\n‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏î‡∏á 5000",
        style=discord.TextStyle.paragraph
    )
    reason = TextInput(
        label="‡πÄ‡∏ö‡∏¥‡∏Å‡πÑ‡∏õ‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£?",
        placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏≤‡∏ß‡∏∏‡∏ò ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Ñ‡∏£‡∏≤‡∏ü‡∏ö‡∏£‡∏≤‡πÜ",
        style=discord.TextStyle.short
    )

    async def on_submit(self, interaction: Interaction):
        review_text = self.review.value.strip()
        reason_text = self.reason.value.strip()
        current_time = get_current_time()

        # ‡πÉ‡∏ä‡πâ regex ‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà "‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡∏°" + "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô" (‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç)
        matches = re.findall(r"(.+?)\s+(\d+)", review_text)
        
        items = []
        for name, quantity in matches:
            name = name.strip()
            if name in ["‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏î‡∏á", "‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß", "‡πÄ‡∏á‡∏¥‡∏ô"]:
                items.append(f"+ {name} : {quantity} $")  # ‡πÉ‡∏™‡πà $ ‡πÑ‡∏ß‡πâ‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏á
            else:
                items.append(f"+ {name} : {quantity} ‡∏ä‡∏¥‡πâ‡∏ô")

        # ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô Code Block + ‡πÅ‡∏ñ‡∏ö‡∏™‡∏µ
        formatted_text = (
            f"```yaml\n"
            f"üìù ‡πÄ‡∏ö‡∏¥‡∏Å‡∏Ç‡∏≠‡∏á‡∏à‡∏≤‡∏Å : {interaction.user.display_name}\n\n"
            + "\n".join(items) +
            f"\n\nüîπ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏ö‡∏¥‡∏Å: {current_time}\n"
            f"üìå ‡∏Ñ‡∏£‡∏≤‡∏ü: {reason_text}\n"
            f"```\n"
            f"=================================="
        )

        # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á Webhook
        requests.post(WEBHOOK_URL, json={"content": formatted_text})

        await interaction.response.send_message("‚úÖ ‡πÄ‡∏ö‡∏¥‡∏Å‡∏Ç‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", ephemeral=True)

class ReviewView(View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="‡πÄ‡∏ö‡∏¥‡∏Å‡∏Ç‡∏≠‡∏á", style=ButtonStyle.green)
    async def review_button(self, interaction: Interaction, button: Button):
        await interaction.response.send_modal(ReviewModal())

@bot.event
async def on_ready():
    print(f"Logged in as {bot.user}")
    try:
        synced = await bot.tree.sync()
        print(f"Synced {len(synced)} commands.")
    except Exception as e:
        print(f"Sync failed: {e}")

@bot.tree.command(name="‡πÄ‡∏ö‡∏¥‡∏Å‡∏Ç‡∏≠‡∏á", description="‡∏™‡πà‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Å‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ö‡∏¥‡∏Å‡∏Ç‡∏≠‡∏á")
async def review(interaction: Interaction):
    gif_url = "https://img2.imgbiz.com/imgbiz/bro-pumpfun.gif"
    
    embed = discord.Embed(title="üì¶ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ö‡∏¥‡∏Å‡∏Ç‡∏≠‡∏á‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö!", color=discord.Color.blue())
    embed.set_image(url=gif_url)
    
    await interaction.response.send_message(embed=embed, view=ReviewView())

bot.run(os.getenv('TOKEN'))
